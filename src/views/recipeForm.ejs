<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Formulario de recetas</title>
</head>

<body>
    <main>
        <h1>Agregar una nueva receta</h1>
        <form enctype="multipart/form-data">
            <label for="recipeName">Nombre de la receta:</label>
            <input type="text" name="recipeName" id="recipeName" placeholder="Ejemplo: Pan de manzana">

            <label for="recipeImage">Foto de la receta</label>
            <input type="file" name="recipeImage" id="recipeImage" accept="image/*">
            <h3>Etiquetas</h3>
            <ul class="tags">
                <input type="button" class="new-tag-button" value="Agregar otra etiqueta">
                <li>
                    <select name="recipeTag" id="recipeTag">
                        <option hidden>Elige la etiqueta de la receta</option>
                        <% tagData.map(type=> { %>
                            <option value="<%= type.tag_id %>">
                                <%= type.name %>
                            </option>
                            <% }) %>
                    </select>
                </li>
            </ul>
            <h3>Categoria de la receta</h3>
            <ul class="cat">
                <input type="button" value="Agregar otra categoria" class="new-cat-button">
                <li>
                    <select name="recipeType" class="recipeType">
                        <option hidden>Elige la categoria de la receta</option>
                        <% typeData.map(type=> { %>
                            <option value="<%= type.categoty_id %>">
                                <%= type.category %>
                            </option>
                            <% }) %>
                    </select>
                </li>
            </ul>
            <h3>Tiempo de realizacion</h3>
            <div>
                <div class="timer">
                    <label for="recipeTime">De</label>
                    <input type="number" name="recipeTime">
                    <select name="recipeTimeUnit">
                        <option hidden>Elige la unidad de tiempo</option>
                        <option value="1">Minuto(s)</option>
                        <option value="2">Hora(s)</option>
                    </select>
                </div>
                <div class="timer">
                    <label for="recipeTime">A</label>
                    <input type="number" name="recipeTime">
                    <select name="recipeTimeUnit">
                        <option hidden>Elige la unidad de tiempo</option>
                        <option value="1">Minuto(s)</option>
                        <option value="2">Hora(s)</option>
                    </select>
                </div>
            </div>
            <h3>Ingredientes</h3>
            <ul class="ingredients-list">
                <li>
                    <input type="button" class="add-new-li" value="Agregar otro ingrediente">
                </li>
                <li>
                    <div>
                        <label for="recipeIngredient">Ingrediente</label>
                        <input type="text" name="recipeIngredient" placeholder="Nombre del ingrediente">
                        <div class="counter">
                            <input type="number" name="recipeIngredientUnitCount" id="recipeIngredientUnitCount"
                                placeholder="Cantidad">
                            <select name="recipeIngredientUnit" id="recipeIngredientUnit">
                                <option hidden>Unidad de medida del ingrediente</option>
                                <% unitData.map(unit=> { %>
                                    <option value="<%= unit.filter_id %>">
                                        <%= unit.unit %>
                                    </option>
                                    <% }) %>
                            </select>
                        </div>
                    </div>
                </li>
            </ul>
            <h3>Pasos de la receta</h3>
            <ul class="steps-list">
                <input type="button" value="Agregar otro paso" class="add-new-step">
                <li>
                    <div class="steps">
                        <label for="recipeSteps">Paso</label>
                        <textarea name="recipeSteps" id="recipeSteps" cols="30" rows="10"
                            placeholder="El paso de como hacerlo aqui"></textarea>
                        <input type="file" name="stepImage">
                        <input type="hidden" name="haveFile" value="false" class="imageStatus">
                    </div>
                </li>
            </ul>
            <input type="submit" value="Subir receta">
            <a href="/">Volver al inicio</a>
        </form>
    </main>
</body>

<script>
    document.addEventListener('DOMContentLoaded', async () => {
        var $select = document.querySelectorAll('#recipeTag')
        var $selectType = document.querySelectorAll('.recipeType')
        const $newTag = document.querySelector('.new-tag-button')
        const $newLi = document.querySelector('.add-new-li')
        const $newStep = document.querySelector('.add-new-step')
        const $newCat = document.querySelector('.new-cat-button')
        const $selectContainer = document.querySelector('.tags')
        var tags
        const form = document.querySelector('form')

        form.addEventListener('submit', async (event) => {
            event.preventDefault()
            console.log('oasdasd')

            const formData = new FormData(form);

            try {
                const response = await fetch('https://recipes-api-dev.koyeb.app/recipe/all-data', {
                    method: 'POST',
                    body: formData
                });

                const data = await response.json();

                if (response.ok) {
                    alert('¡Receta subida con éxito!');
                } else {
                    alert('Error al subir la receta. Por favor, inténtalo de nuevo.');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error al subir la receta. Por favor, inténtalo de nuevo.')
            }
        })

        function updateFileStatus(input) {
            const fileStatusInput = input.parentNode.querySelector('.imageStatus');
            if (input.files.length > 0) {
                fileStatusInput.value = 'true'
            } else {
                fileStatusInput.value = 'false'
            }
        }

        var fileInputs = Array.from(document.querySelectorAll('input[name="stepImage"]'))

        fileInputs.forEach(input => {
            input.addEventListener('change', () => {
                updateFileStatus(input)
            })
        })

        function addIngredientLi() {
            const li = document.createElement('li')
            li.innerHTML = `<div>
                        <label for="recipeIngredient">Ingrediente</label>
                        <input type="text" name="recipeIngredient" placeholder="Nombre del ingrediente">
                        <div class="counter">
                            <input type="number" name="recipeIngredientUnitCount" id="recipeIngredientUnitCount"
                                placeholder="Cantidad">
                            <select name="recipeIngredientUnit" id="recipeIngredientUnit">
                                <option hidden>Unidad de medida del ingrediente</option>
                                <% unitData.map(unit=> { %>
                                    <option value="<%= unit.filter_id %>"><%= unit.unit %></option>
                                <% }) %>
                            </select>
                        </div>
                    </div>`

            document.querySelector('.ingredients-list').appendChild(li)
        }

        function addStepLi() {
            const li = document.createElement('li')
            li.innerHTML = `<div class="steps">
                        <label for="recipeSteps">Paso</label>
                        <textarea name="recipeSteps" id="recipeSteps" cols="30" rows="10" placeholder="El paso de como hacerlo aqui"></textarea>
                        <input type="file" name="stepImage">
                        <input type="hidden" name="haveFile" value="false" class = "imageStatus">
                    </div>`

            document.querySelector('.steps-list').appendChild(li)
        }

        function addSelectTag() {
            const li = document.createElement('li')
            li.innerHTML = `
            <select name="recipeTag" id="recipeTag">
                        <option hidden>Elige la etiqueta de la receta</option>
                        <% tagData.map(type=> { %>
                            <option value="<%= type.tag_id %>">
                                <%= type.name %>
                            </option>
                            <% }) %>
                    </select>
            `
            $selectContainer.appendChild(li)
        }

        function addSelectType() {
            const li = document.createElement('li')
            li.innerHTML = `
            <select name="recipeType" class="recipeType">
                        <option hidden>Elige la categoria de la receta</option>
                        <% typeData.map(type=> { %>
                            <option value="<%= type.categoty_id %>">
                                <%= type.category %>
                            </option>
                            <% }) %>
                    </select>
            `
            document.querySelector('.cat').appendChild(li)
        }

        $newTag.addEventListener('click', async (evt) => {
            evt.preventDefault()
            addSelectTag()
        })

        $newLi.addEventListener('click', (evt) => {
            evt.preventDefault()
            addIngredientLi()
        })

        $newStep.addEventListener('click', (evt) => {
            evt.preventDefault()
            addStepLi()
            fileInputs = Array.from(document.querySelectorAll('input[name="stepImage"]'))
            fileInputs.forEach(input => {
                input.addEventListener('change', () => {
                    updateFileStatus(input)
                })
            })
        })

        $newCat.addEventListener('click', (evt) => {
            evt.preventDefault()
            addSelectType()
        })
    })
</script>

<style>
    html {
        font-size: 16px;
        font-family: system-ui, sans-serif;
    }

    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        border: 0;
    }

    body {
        width: 100dvw;
        height: 100dvh;
        background: rgb(214, 214, 214);
        display: flex;

        & h1 {
            text-align: center;
            margin: 1rem 0;
        }

        & form {
            width: 100%;
            display: flex;
            flex-direction: column;
            padding-inline: 1rem;

            & input,
            select {
                width: 100%;
                padding-inline: 10px;
                height: 2.5rem;
                outline: none;
                border: 1px solid black;
            }
        }
    }

    input {
        height: 2rem;
        border-radius: 2px;
    }

    ul {
        display: flex;
        flex-direction: column;
        width: 100%;
        position: relative;
        list-style: none;

        & li {
            width: 100%;
            margin: 0.125rem 0;

            & div {
                display: flex;
                flex-direction: column;
                gap: 0.125rem;

                .counter {
                    display: flex;
                    flex-direction: row;
                    width: 100%;

                    & input,
                    select {
                        border-radius: 4px;
                    }

                    & input {
                        width: 7rem;
                    }
                }
            }

            & select {
                width: 100%;
            }
        }
    }

    input[type="submit"] {
        width: 100%;
        margin: 1.25rem 0;
        font-size: 1rem;
    }

    a {
        font-size: 1.25rem;
        padding: 0.25rem 1rem;
        border-radius: 4px;
        text-decoration: none;
        text-align: center;
        background: black;
        color: white;
        margin: 0 0 1.5rem 0;
    }

    h3 {
        margin: 0.25rem 0;
    }

    .timer {
        position: relative;
        padding: 0.125rem 0;
        display: flex;
        gap: 0.125rem;

        & label {
            position: absolute;
            font-size: 1rem;
            top: -0.5rem;
            left: 0.5rem;
            font-weight: bold;
        }

        & input {
            width: 7rem;
        }

        & input,
        select {
            border-radius: 4px;
        }
    }

    input[type="button"] {
        margin: 0.35rem 0;
    }

    .steps {
        position: relative;

        & label {
            position: absolute;
            top: -0.75rem;
            left: 0.25rem;
            font-weight: bold;
        }
    }
</style>

</html>